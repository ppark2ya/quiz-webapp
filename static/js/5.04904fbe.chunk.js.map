{"version":3,"sources":["../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/defaults.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/cancel/Cancel.js","../../src/utils/isCheckBoxInput.ts","../../src/utils/isDateObject.ts","../../src/utils/isNullOrUndefined.ts","../../src/utils/isObject.ts","../../src/logic/getNodeParentName.ts","../../src/logic/isNameInFieldArray.ts","../../src/utils/compact.ts","../../src/utils/isUndefined.ts","../../src/utils/get.ts","../../src/constants.ts","../../src/utils/omit.ts","../../src/useFormContext.tsx","../../src/logic/getProxyFormState.ts","../../src/utils/isEmptyObject.ts","../../src/logic/shouldRenderFormState.ts","../../src/utils/convertToArrayPayload.ts","../../src/utils/isWeb.ts","../../src/utils/isProxyEnabled.ts","../../src/logic/appendErrors.ts","../../src/utils/isKey.ts","../../src/utils/stringToPath.ts","../../src/utils/set.ts","../../src/logic/focusFieldBy.ts","../../src/logic/getFieldsValues.ts","../../src/utils/isPrimitive.ts","../../src/utils/deepEqual.ts","../../src/utils/deepMerge.ts","../../src/logic/setFieldArrayDirtyFields.ts","../../src/utils/remove.ts","../../src/utils/isBoolean.ts","../../src/utils/unset.ts","../../src/utils/isFileInput.ts","../../src/utils/isMultipleSelect.ts","../../src/utils/isRadioInput.ts","../../src/logic/getCheckboxValue.ts","../../src/logic/getFieldValueAs.ts","../../src/logic/getRadioValue.ts","../../src/logic/getFieldValue.ts","../../src/logic/getMultipleSelectValue.ts","../../src/logic/getResolverOptions.ts","../../src/logic/hasValidation.ts","../../src/logic/skipValidation.ts","../../src/utils/isFunction.ts","../../src/utils/isString.ts","../../src/utils/isMessage.ts","../../src/utils/isRegex.ts","../../src/logic/getValidateError.ts","../../src/logic/getValueAndMessage.ts","../../src/logic/validateField.ts","../../src/utils/getValidationModes.ts","../../src/utils/isHTMLElement.ts","../../src/utils/isRadioOrCheckbox.ts","../../src/utils/Subject.ts","../../src/useForm.ts","../node_modules/axios/index.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/axios/lib/utils.js"],"names":["module","exports","fn","thisArg","args","Array","arguments","length","i","apply","utils","require","encode","val","encodeURIComponent","replace","url","params","paramsSerializer","serializedParams","isURLSearchParams","toString","parts","forEach","key","isArray","v","isDate","toISOString","isObject","JSON","stringify","push","join","hashmarkIndex","indexOf","slice","value","__CANCEL__","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","isUndefined","defaults","adapter","XMLHttpRequest","process","Object","prototype","call","getDefaultAdapter","transformRequest","data","isFormData","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","status","common","method","merge","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","config","Promise","resolve","reject","requestData","requestHeaders","request","auth","username","password","unescape","Authorization","btoa","fullPath","baseURL","open","toUpperCase","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","isStandardBrowserEnv","xsrfValue","withCredentials","read","undefined","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","message","code","error","Error","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","target","source","isPlainObject","mergeDeepProperties","prop","axiosKeys","concat","otherKeys","keys","filter","Cancel","this","element","type","Date","isObjectType","isNullOrUndefined","isDateObject","name","substring","search","names","some","current","getNodeParentName","Boolean","obj","path","defaultValue","result","compact","split","reduce","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","copy","FormContext","displayName","isProxyEnabled","formState","readFormStateRef","localReadFormStateRef","isRoot","Proxy","get","formStateData","omit","isEmptyObject","find","window","HTMLElement","document","isWeb","validateAllFieldCriteria","errors","types","test","input","set","object","index","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","callback","fieldsNames","field","_f","ref","focus","refs","getFieldsValues","fieldsRef","output","disabled","every","deepEqual","object1","object2","isErrorObject","isPrimitive","keys1","keys2","val1","val2","deepMerge","targetValue","sourceValue","setDirtyFields","values","defaultValues","dirtyFields","parentNode","parentName","unset","previousObjRef","updatePath","childObject","baseGet","k","objectRef","currentPaths","currentPathsLength","item","isBoolean","defaultResult","isValid","validResult","options","option","checked","map","attributes","valueAsNumber","valueAsDate","setValueAs","NaN","defaultReturn","previous","getFieldValue","isFileInput","files","isRadioInput","getRadioValue","isMultipleSelect","selected","isCheckBox","getCheckboxValue","getFieldValueAs","fieldsRefs","criteriaMode","shouldUseNativeValidation","mounted","required","min","max","maxLength","minLength","pattern","validate","isOnBlur","isOnChange","isOnTouch","isTouched","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","isString","RegExp","getValidateError","isMessage","validationData","isRegex","a","inputValue","mount","inputRef","setCustomValidty","reportValidity","setCustomValidity","isRadio","isCheckBoxInput","isRadioOrCheckbox","isEmpty","appendErrorsCurry","appendErrors","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","maxOutput","minOutput","valueDate","exceedMin","valueNumber","parseFloat","maxLengthOutput","minLengthOutput","patternValue","match","isFunction","validateError","validationResult","mode","isOnSubmit","Subscription","tearDowns","tearDown","teardown","Subscriber","observer","subscription","closed","add","next","Subject","observers","subscriber","isWindowUndefined","useForm","reValidateMode","resolver","context","shouldFocusError","shouldUnregister","isDirty","isValidating","submitCount","touchedFields","isSubmitting","isSubmitSuccessful","updateFormState","resolverRef","formStateRef","defaultValuesRef","fieldArrayDefaultValuesRef","contextRef","inFieldArrayActionRef","isMountedRef","subjectsRef","watch","control","array","state","namesRef","Set","unMount","watchAll","validationMode","getValidationModes","isValidateAllFieldCriteria","isFieldWatched","has","shouldRenderBaseOnError","shouldSkipRender","inputState","isValidFromResolver","isWatched","previousError","validateForm","updatedFormState","setFieldValue","rawValue","shouldRender","shouldRegister","register","isHTMLElement","_c","radioRef","selectRef","includes","checkboxRef","shouldDirty","shouldTouch","updateTouchAndDirtyState","shouldValidate","trigger","getIsDirty","formValues","isCurrentTouched","isChanged","previousIsDirty","isPreviousFieldDirty","isCurrentFieldDirty","isPreviousFieldTouched","executeInlineValidation","skipReRender","validateField","executeResolverValidation","getResolverOptions","shouldCheckValid","valid","fieldError","fieldNames","convertToArrayPayload","schemaResult","all","fieldName","shouldFocus","updateIsValid","updateIsValidAndInputValue","isValueUndefined","defaultChecked","setInternalValues","entries","fieldKey","fieldValue","setValue","isFieldArray","isReset","setFieldArrayDirtyFields","getValues","handleChange","inputType","shouldSkipValidation","hasValidation","skipValidation","parentNodeName","currentError","clearErrors","inputName","setError","watchInternal","isGlobal","isArrayNames","fieldValues","subscribe","info","unregister","delete","keepError","keepValue","keepDirty","keepTouched","keepDefaultValue","keepIsValid","registerFieldRef","isRadioOrCheckboxFunction","contains","onChange","onBlur","shouldUnmount","isNameInFieldArray","handleSubmit","onValid","onInvalid","preventDefault","persist","hasNoPromiseError","registerAbsentFields","reset","keepStateOptions","updatedValues","keepValues","closest","keepDefaultValues","keepSubmitCount","keepIsSubmitted","keepErrors","setFocus","formStateSubscription","shouldRenderFormState","useFieldArraySubscription","unsubscribe","unregisterFieldNames","isLiveInDom","getProxyFormState","Axios","mergeConfig","createInstance","defaultConfig","instance","extend","axios","create","instanceConfig","CancelToken","isCancel","promises","spread","isAxiosError","default","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","unshift","fulfilled","rejected","shift","getUri","handlers","use","eject","id","h","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","normalizedName","toJSON","description","number","fileName","lineNumber","columnNumber","stack","write","expires","domain","secure","cookie","isNumber","toGMTString","decodeURIComponent","remove","now","isAbsoluteURL","combineURLs","requestedURL","relativeURL","ignoreDuplicateOf","parsed","line","trim","substr","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","hash","hostname","port","pathname","charAt","location","requestURL","executor","TypeError","resolvePromise","token","c","arr","payload","getPrototypeOf","l","hasOwnProperty","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","b","str","stripBOM","content","charCodeAt"],"mappings":"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","file":"static/js/5.04904fbe.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (data: unknown) => data instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","export default (name: string) => name.substring(0, name.search(/.\\d/)) || name;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  [...names].some((current) => getNodeParentName(name) === current);\n","export default (value: any[]) => value.filter(Boolean);\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T extends unknown>(\n  obj: T,\n  path: string,\n  defaultValue?: unknown,\n) => {\n  if (isObject(obj) && path) {\n    const result = compact(path.split(/[,[\\].]+?/)).reduce(\n      (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n      obj,\n    );\n\n    return isUndefined(result) || result === obj\n      ? isUndefined(obj[path as keyof T])\n        ? defaultValue\n        : obj[path as keyof T]\n      : result;\n  }\n\n  return undefined;\n};\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","export default <Key extends string, T extends Record<Key, any>>(\n  source: T,\n  key: Key,\n): Omit<T, Key> => {\n  const copy = { ...source };\n  delete copy[key];\n\n  return copy;\n};\n","import * as React from 'react';\n\nimport omit from './utils/omit';\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst FormContext = React.createContext<UseFormReturn | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n>(): UseFormReturn<TFieldValues> =>\n  React.useContext(FormContext) as unknown as UseFormReturn<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>(\n  props: FormProviderProps<TFieldValues>,\n) => (\n  <FormContext.Provider\n    value={omit(props, 'children') as unknown as UseFormReturn}\n  >\n    {props.children}\n  </FormContext.Provider>\n);\n","import * as React from 'react';\n\nimport { VALIDATION_MODE } from '../constants';\nimport { FormState, FormStateProxy, ReadFormState } from '../types';\n\nexport default <TFieldValues>(\n  isProxyEnabled: boolean,\n  formState: FormState<TFieldValues>,\n  readFormStateRef: React.MutableRefObject<ReadFormState>,\n  localReadFormStateRef?: React.MutableRefObject<ReadFormState>,\n  isRoot = true,\n) =>\n  isProxyEnabled\n    ? new Proxy(formState, {\n        get: (obj, prop: keyof FormStateProxy) => {\n          if (prop in obj) {\n            if (readFormStateRef.current[prop] !== VALIDATION_MODE.all) {\n              readFormStateRef.current[prop] = isRoot\n                ? VALIDATION_MODE.all\n                : true;\n            }\n            localReadFormStateRef &&\n              (localReadFormStateRef.current[prop] = true);\n            return obj[prop];\n          }\n\n          return undefined;\n        },\n      })\n    : formState;\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport { ReadFormState } from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport omit from '../utils/omit';\n\nexport default <T extends Record<string, any>, K extends ReadFormState>(\n  formStateData: T,\n  readFormStateRef: K,\n  isRoot?: boolean,\n) => {\n  const formState = omit(formStateData, 'name');\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(readFormStateRef).length ||\n    Object.keys(formState).find(\n      (key) =>\n        readFormStateRef[key as keyof ReadFormState] ===\n        (isRoot ? VALIDATION_MODE.all : true),\n    )\n  );\n};\n","export default <T extends unknown>(value: T) =>\n  Array.isArray(value) ? value : [value];\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isWeb from './isWeb';\n\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== 'undefined';\n\nexport default isProxyEnabled;\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\nimport isUndefined from '../utils/isUndefined';\nimport omit from '../utils/omit';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name: string) => boolean,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const _f = field._f;\n      const current = omit(field, '_f');\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n          break;\n        } else if (_f.refs) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(current)) {\n        focusFieldBy(current, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","import * as React from 'react';\n\nimport { FieldRefs, FieldValues } from '../types';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport omit from '../utils/omit';\nimport set from '../utils/set';\n\nconst getFieldsValues = (\n  fieldsRef: React.MutableRefObject<FieldRefs>,\n  output: FieldValues = {},\n): any => {\n  for (const name in fieldsRef.current) {\n    const field = fieldsRef.current[name];\n\n    if (field && !isNullOrUndefined(output)) {\n      const _f = field._f;\n      const current = omit(field, '_f');\n\n      set(\n        output,\n        name,\n        _f && _f.ref\n          ? _f.ref.disabled || (_f.refs && _f.refs.every((ref) => ref.disabled))\n            ? undefined\n            : _f.value\n          : Array.isArray(field)\n          ? []\n          : {},\n      );\n\n      current &&\n        getFieldsValues(\n          {\n            current,\n          },\n          output[name],\n        );\n    }\n  }\n\n  return output;\n};\n\nexport default getFieldsValues;\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import * as React from 'react';\n\nimport isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(\n  object1: any,\n  object2: any,\n  isErrorObject?: boolean,\n) {\n  if (\n    isPrimitive(object1) ||\n    isPrimitive(object2) ||\n    isDateObject(object1) ||\n    isDateObject(object2)\n  ) {\n    return object1 === object2;\n  }\n\n  if (!React.isValidElement(object1)) {\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    for (const key of keys1) {\n      const val1 = object1[key];\n\n      if (!(isErrorObject && key === 'ref')) {\n        const val2 = object2[key];\n\n        if (\n          (isObject(val1) || Array.isArray(val1)) &&\n          (isObject(val2) || Array.isArray(val2))\n            ? !deepEqual(val1, val2, isErrorObject)\n            : val1 !== val2\n        ) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n","import isObject from './isObject';\nimport isPrimitive from './isPrimitive';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>,\n>(target: T, source: U): T & U {\n  if (isPrimitive(target) || isPrimitive(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    try {\n      target[key] =\n        (isObject(targetValue) && isObject(sourceValue)) ||\n        (Array.isArray(targetValue) && Array.isArray(sourceValue))\n          ? deepMerge(targetValue, sourceValue)\n          : sourceValue;\n    } catch {}\n  }\n\n  return target;\n}\n","import { get } from '../utils';\nimport deepEqual from '../utils/deepEqual';\nimport { deepMerge } from '../utils/deepMerge';\nimport set from '../utils/set';\n\nfunction setDirtyFields<\n  T extends Record<string, unknown>[],\n  U extends Record<string, unknown>[],\n  K extends Record<string, boolean | []>,\n>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n  parentNode?: K,\n  parentName?: keyof K,\n) {\n  let index = -1;\n\n  while (++index < values.length) {\n    for (const key in values[index]) {\n      if (Array.isArray(values[index][key])) {\n        !dirtyFields[index] && (dirtyFields[index] = {});\n        dirtyFields[index][key] = [];\n        setDirtyFields(\n          values[index][key] as T,\n          get(defaultValues[index] || {}, key, []),\n          dirtyFields[index][key] as [],\n          dirtyFields[index],\n          key,\n        );\n      } else {\n        deepEqual(get(defaultValues[index] || {}, key), values[index][key])\n          ? set(dirtyFields[index] || {}, key)\n          : (dirtyFields[index] = {\n              ...dirtyFields[index],\n              [key]: true,\n            });\n      }\n    }\n\n    parentNode &&\n      !dirtyFields.length &&\n      delete parentNode[parentName as keyof K];\n  }\n\n  return dirtyFields;\n}\n\nexport default <T extends U, U extends Record<string, unknown>[]>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n) =>\n  deepMerge(\n    setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)),\n    setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)),\n  );\n","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n        data,\n        (convertToArrayPayload(index) as number[]).sort((a, b) => a - b),\n      );\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import isBoolean from './isBoolean';\nimport isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) &&\n            !objectRef.filter(\n              (data) =>\n                (isObject(data) && !isEmptyObject(data)) || isBoolean(data),\n            ).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import { Field } from '../types';\nimport isUndefined from '../utils/isUndefined';\n\nexport default (\n  value: any,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === ''\n      ? NaN\n      : +value\n    : valueAsDate\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(field?: Field) {\n  if (field && field._f) {\n    const ref = field._f.ref;\n\n    if (ref.disabled) {\n      return;\n    }\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field._f.refs).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field._f.refs).value;\n    }\n\n    return getFieldValueAs(\n      isUndefined(ref.value) ? field._f.ref.value : ref.value,\n      field._f,\n    );\n  }\n}\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  fieldsRefs: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field = get(fieldsRefs, name) as Field;\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import { RegisterOptions } from '../types';\n\nexport default <T extends RegisterOptions>(options?: T, mounted?: boolean) =>\n  mounted &&\n  options &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isOnTouch,\n  isTouched,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n  isOnAll,\n}: {\n  isOnAll?: boolean;\n  isOnBlur?: boolean;\n  isOnChange?: boolean;\n  isReValidateOnBlur?: boolean;\n  isReValidateOnChange?: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted?: boolean;\n  isOnTouch?: boolean;\n  isTouched?: boolean;\n}) => {\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","export default (value: unknown): value is string => typeof value === 'string';\n","import * as React from 'react';\n\nimport { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || React.isValidElement(value as JSX.Element);\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport { Field, FieldError, InternalFieldErrors, Message } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async (\n  {\n    _f: {\n      ref,\n      refs,\n      required,\n      maxLength,\n      minLength,\n      min,\n      max,\n      pattern,\n      validate,\n      name,\n      value: inputValue,\n      valueAsNumber,\n      mount,\n    },\n  }: Field,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n): Promise<InternalFieldErrors> => {\n  if (!mount) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidty = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n      (isBoolean(inputValue) && !inputValue) ||\n      (isCheckBox && !getCheckboxValue(refs).isValid) ||\n      (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNaN(inputValue)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue);\n      if (isString(maxOutput.value)) {\n        exceedMax = valueDate > new Date(maxOutput.value);\n      }\n      if (isString(minOutput.value)) {\n        exceedMin = valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidty(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidty(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidty(true);\n  return error;\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","export type Observer<T> = {\n  next: (value: T) => void;\n};\n\ntype TearDown = () => void;\n\nexport type SubjectType<T> = {\n  next: (value: T) => void;\n  subscribe: (value: Observer<T>) => {\n    unsubscribe: TearDown;\n  };\n};\n\nexport class Subscription {\n  private tearDowns: TearDown[] = [];\n\n  add(tearDown: TearDown) {\n    this.tearDowns.push(tearDown);\n  }\n\n  unsubscribe() {\n    for (const teardown of this.tearDowns) {\n      teardown();\n    }\n    this.tearDowns = [];\n  }\n}\n\nclass Subscriber<T> implements Observer<T> {\n  closed = false;\n\n  constructor(private observer: Observer<T>, subscription: Subscription) {\n    subscription.add(() => (this.closed = true));\n  }\n\n  next(value: T) {\n    if (!this.closed) {\n      this.observer.next(value);\n    }\n  }\n}\n\nexport default class Subject<T> {\n  observers: Observer<T>[];\n\n  constructor() {\n    this.observers = [];\n  }\n\n  next(value: T) {\n    for (const observer of this.observers) {\n      observer.next(value);\n    }\n  }\n\n  subscribe(observer: Observer<T>) {\n    const subscription = new Subscription();\n    const subscriber = new Subscriber(observer, subscription);\n    this.observers.push(subscriber);\n\n    return subscription;\n  }\n\n  unsubscribe() {\n    this.observers = [];\n  }\n}\n","import * as React from 'react';\n\nimport focusFieldBy from './logic/focusFieldBy';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport getFieldValueAs from './logic/getFieldValueAs';\nimport getNodeParentName from './logic/getNodeParentName';\nimport getProxyFormState from './logic/getProxyFormState';\nimport getResolverOptions from './logic/getResolverOptions';\nimport hasValidation from './logic/hasValidation';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport setFieldArrayDirtyFields from './logic/setFieldArrayDirtyFields';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport skipValidation from './logic/skipValidation';\nimport validateField from './logic/validateField';\nimport compact from './utils/compact';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport deepEqual from './utils/deepEqual';\nimport get from './utils/get';\nimport getValidationModes from './utils/getValidationModes';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isDateObject from './utils/isDateObject';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isFileInput from './utils/isFileInput';\nimport isFunction from './utils/isFunction';\nimport isHTMLElement from './utils/isHTMLElement';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isObject from './utils/isObject';\nimport isPrimitive from './utils/isPrimitive';\nimport isProxyEnabled from './utils/isProxyEnabled';\nimport isRadioInput from './utils/isRadioInput';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isString from './utils/isString';\nimport isUndefined from './utils/isUndefined';\nimport isWeb from './utils/isWeb';\nimport omit from './utils/omit';\nimport set from './utils/set';\nimport Subject from './utils/Subject';\nimport unset from './utils/unset';\nimport { EVENTS, VALIDATION_MODE } from './constants';\nimport {\n  ChangeHandler,\n  DeepPartial,\n  DefaultValues,\n  Field,\n  FieldArrayDefaultValues,\n  FieldError,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  PathValue,\n  ReadFormState,\n  Ref,\n  RegisterOptions,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UnpackNestedValue,\n  UseFormClearErrors,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormRegisterReturn,\n  UseFormReset,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from './types';\n\nconst isWindowUndefined = typeof window === 'undefined';\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as DefaultValues<TFieldValues>,\n  shouldFocusError = true,\n  shouldUseNativeValidation,\n  shouldUnregister,\n  criteriaMode,\n}: UseFormProps<TFieldValues, TContext> = {}): UseFormReturn<TFieldValues> {\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {},\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {},\n  });\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    touchedFields: !isProxyEnabled,\n    isValidating: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n    errors: !isProxyEnabled,\n  });\n  const resolverRef = React.useRef(resolver);\n  const formStateRef = React.useRef(formState);\n  const fieldsRef = React.useRef<FieldRefs>({});\n  const defaultValuesRef =\n    React.useRef<DefaultValues<TFieldValues>>(defaultValues);\n  const fieldArrayDefaultValuesRef = React.useRef<FieldArrayDefaultValues>({});\n  const contextRef = React.useRef(context);\n  const inFieldArrayActionRef = React.useRef(false);\n  const isMountedRef = React.useRef(false);\n  const subjectsRef: Subjects<TFieldValues> = React.useRef({\n    watch: new Subject(),\n    control: new Subject(),\n    array: new Subject(),\n    state: new Subject(),\n  });\n  const namesRef = React.useRef<Names>({\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n    watchAll: false,\n  });\n\n  const validationMode = getValidationModes(mode);\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  resolverRef.current = resolver;\n  contextRef.current = context;\n\n  const isFieldWatched = (name: FieldPath<TFieldValues>) =>\n    namesRef.current.watchAll ||\n    namesRef.current.watch.has(name) ||\n    namesRef.current.watch.has((name.match(/\\w+/) || [])[0]);\n\n  const shouldRenderBaseOnError = React.useCallback(\n    async (\n      shouldSkipRender: boolean,\n      name: InternalFieldName,\n      error?: FieldError,\n      inputState?: {\n        dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n        isDirty?: boolean;\n        touched?: FieldNamesMarkedBoolean<TFieldValues>;\n      },\n      isValidFromResolver?: boolean,\n      isWatched?: boolean,\n    ): Promise<void> => {\n      const previousError = get(formStateRef.current.errors, name);\n      const isValid = readFormStateRef.current.isValid\n        ? resolver\n          ? isValidFromResolver\n          : await validateForm(fieldsRef.current, true)\n        : false;\n\n      error\n        ? set(formStateRef.current.errors, name, error)\n        : unset(formStateRef.current.errors, name);\n\n      if (\n        (isWatched ||\n          (error ? !deepEqual(previousError, error, true) : previousError) ||\n          !isEmptyObject(inputState) ||\n          formStateRef.current.isValid !== isValid) &&\n        !shouldSkipRender\n      ) {\n        const updatedFormState = {\n          ...inputState,\n          isValid: !!isValid,\n          errors: formStateRef.current.errors,\n          name,\n        };\n\n        formStateRef.current = {\n          ...formStateRef.current,\n          ...updatedFormState,\n        };\n\n        subjectsRef.current.state.next(isWatched ? { name } : updatedFormState);\n      }\n\n      subjectsRef.current.state.next({\n        isValidating: false,\n      });\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (\n      name: InternalFieldName,\n      rawValue: SetFieldValue<TFieldValues>,\n      options: SetValueConfig = {},\n      shouldRender?: boolean,\n      shouldRegister?: boolean,\n    ) => {\n      shouldRegister && register(name as Path<TFieldValues>);\n      const field = get(fieldsRef.current, name);\n\n      if (field) {\n        const _f = (field as Field)._f;\n\n        if (_f) {\n          const value =\n            isWeb && isHTMLElement(_f.ref) && isNullOrUndefined(rawValue)\n              ? ''\n              : rawValue;\n          _f.value = getFieldValueAs(rawValue, _f);\n\n          if (isRadioInput(_f.ref) && !_f._c) {\n            (_f.refs || []).forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === value),\n            );\n          } else if (isFileInput(_f.ref) && !isString(value) && !_f._c) {\n            _f.ref.files = value as FileList;\n          } else if (isMultipleSelect(_f.ref)) {\n            [..._f.ref.options].forEach(\n              (selectRef) =>\n                (selectRef.selected = (value as string[]).includes(\n                  selectRef.value,\n                )),\n            );\n          } else if (isCheckBoxInput(_f.ref) && _f.refs && !_f._c) {\n            _f.refs.length > 1\n              ? _f.refs.forEach(\n                  (checkboxRef) =>\n                    (checkboxRef.checked = Array.isArray(value)\n                      ? !!(value as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : value === checkboxRef.value),\n                )\n              : (_f.refs[0].checked = !!value);\n          } else {\n            _f.ref.value = value;\n          }\n\n          if (shouldRender && _f._c) {\n            const values = getFieldsValues(fieldsRef);\n            set(values, name, rawValue);\n            subjectsRef.current.control.next({\n              values: {\n                ...defaultValuesRef.current,\n                ...values,\n              } as DefaultValues<TFieldValues>,\n              name,\n            });\n          }\n\n          (options.shouldDirty || options.shouldTouch) &&\n            updateTouchAndDirtyState(name, value, options.shouldTouch);\n          options.shouldValidate && trigger(name as Path<TFieldValues>);\n        } else {\n          field._f = {\n            ref: {\n              name,\n              value: rawValue,\n            },\n            value: rawValue,\n          };\n        }\n      }\n    },\n    [],\n  );\n\n  const getIsDirty: GetIsDirty = React.useCallback((name, data) => {\n    const formValues = getFieldsValues(fieldsRef);\n\n    name && data && set(formValues, name, data);\n\n    return !deepEqual(formValues, defaultValuesRef.current);\n  }, []);\n\n  const updateTouchAndDirtyState = React.useCallback(\n    (\n      name: InternalFieldName,\n      inputValue: unknown,\n      isCurrentTouched?: boolean,\n      shouldRender = true,\n    ): Partial<\n      Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n    > => {\n      const state: Partial<FormState<TFieldValues>> & { name: string } = {\n        name,\n      };\n      let isChanged = false;\n\n      if (readFormStateRef.current.isDirty) {\n        const previousIsDirty = formStateRef.current.isDirty;\n        formStateRef.current.isDirty = getIsDirty();\n        state.isDirty = formStateRef.current.isDirty;\n        isChanged = previousIsDirty !== state.isDirty;\n      }\n\n      if (readFormStateRef.current.dirtyFields && !isCurrentTouched) {\n        const isPreviousFieldDirty = get(\n          formStateRef.current.dirtyFields,\n          name,\n        );\n        const isCurrentFieldDirty = !deepEqual(\n          get(defaultValuesRef.current, name),\n          inputValue,\n        );\n        isCurrentFieldDirty\n          ? set(formStateRef.current.dirtyFields, name, true)\n          : unset(formStateRef.current.dirtyFields, name);\n        state.dirtyFields = formStateRef.current.dirtyFields;\n        isChanged =\n          isChanged ||\n          isPreviousFieldDirty !== get(formStateRef.current.dirtyFields, name);\n      }\n\n      const isPreviousFieldTouched = get(\n        formStateRef.current.touchedFields,\n        name,\n      );\n\n      if (isCurrentTouched && !isPreviousFieldTouched) {\n        set(formStateRef.current.touchedFields, name, isCurrentTouched);\n        state.touchedFields = formStateRef.current.touchedFields;\n        isChanged =\n          isChanged ||\n          (readFormStateRef.current.touchedFields &&\n            isPreviousFieldTouched !== isCurrentTouched);\n      }\n\n      isChanged && shouldRender && subjectsRef.current.state.next(state);\n\n      return isChanged ? state : {};\n    },\n    [],\n  );\n\n  const executeInlineValidation = React.useCallback(\n    async (\n      name: InternalFieldName,\n      skipReRender: boolean,\n    ): Promise<boolean> => {\n      const error = (\n        await validateField(\n          get(fieldsRef.current, name) as Field,\n          isValidateAllFieldCriteria,\n          shouldUseNativeValidation,\n        )\n      )[name];\n\n      shouldRenderBaseOnError(skipReRender, name, error);\n\n      return isUndefined(error);\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const executeResolverValidation = React.useCallback(\n    async (names?: InternalFieldName[]) => {\n      const { errors } = await resolverRef.current!(\n        getFieldsValues(fieldsRef),\n        contextRef.current,\n        getResolverOptions(\n          namesRef.current.mount,\n          fieldsRef.current,\n          criteriaMode,\n          shouldUseNativeValidation,\n        ),\n      );\n\n      if (names) {\n        for (const name of names) {\n          const error = get(errors, name);\n          error\n            ? set(formStateRef.current.errors, name, error)\n            : unset(formStateRef.current.errors, name);\n        }\n      } else {\n        formStateRef.current.errors = errors;\n      }\n\n      return errors;\n    },\n    [criteriaMode, shouldUseNativeValidation],\n  );\n\n  const validateForm = async (\n    fieldsRef: FieldRefs,\n    shouldCheckValid?: boolean,\n    context = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fieldsRef) {\n      const field = fieldsRef[name];\n\n      if (field) {\n        const _f = field._f;\n        const current = omit(field, '_f');\n\n        if (_f) {\n          const fieldError = await validateField(\n            field,\n            isValidateAllFieldCriteria,\n            shouldUseNativeValidation,\n          );\n\n          if (shouldCheckValid) {\n            if (fieldError[_f.name]) {\n              context.valid = false;\n              break;\n            }\n          } else {\n            fieldError[_f.name]\n              ? set(formStateRef.current.errors, _f.name, fieldError[_f.name])\n              : unset(formStateRef.current.errors, _f.name);\n          }\n        }\n\n        current && (await validateForm(current, shouldCheckValid, context));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = React.useCallback(\n    async (name, options = {}) => {\n      const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n      let isValid;\n\n      subjectsRef.current.state.next({\n        isValidating: true,\n      });\n\n      if (resolver) {\n        const schemaResult = await executeResolverValidation(\n          isUndefined(name) ? name : fieldNames,\n        );\n        isValid = name\n          ? fieldNames.every((name) => !get(schemaResult, name))\n          : isEmptyObject(schemaResult);\n      } else {\n        if (name) {\n          isValid = (\n            await Promise.all(\n              fieldNames\n                .filter((fieldName) => get(fieldsRef.current, fieldName, {})._f)\n                .map(\n                  async (fieldName) =>\n                    await executeInlineValidation(fieldName, true),\n                ),\n            )\n          ).every(Boolean);\n        } else {\n          await validateForm(fieldsRef.current);\n          isValid = isEmptyObject(formStateRef.current.errors);\n        }\n      }\n\n      subjectsRef.current.state.next({\n        ...(isString(name) ? { name } : {}),\n        errors: formStateRef.current.errors,\n        isValidating: false,\n      });\n\n      if (options.shouldFocus && !isValid) {\n        focusFieldBy(\n          fieldsRef.current,\n          (key) => get(formStateRef.current.errors, key),\n          name ? fieldNames : namesRef.current.mount,\n        );\n      }\n\n      readFormStateRef.current.isValid && updateIsValid();\n\n      return isValid;\n    },\n    [executeResolverValidation, executeInlineValidation],\n  );\n\n  const updateIsValidAndInputValue = (name: InternalFieldName, ref?: Ref) => {\n    const field = get(fieldsRef.current, name) as Field;\n\n    if (field) {\n      const isValueUndefined = isUndefined(field._f.value);\n      const defaultValue = isValueUndefined\n        ? isUndefined(get(fieldArrayDefaultValuesRef.current, name))\n          ? get(defaultValuesRef.current, name)\n          : get(fieldArrayDefaultValuesRef.current, name)\n        : field._f.value;\n\n      if (!isUndefined(defaultValue)) {\n        if (ref && (ref as HTMLInputElement).defaultChecked) {\n          field._f.value = getFieldValue(field);\n        } else {\n          setFieldValue(name, defaultValue);\n        }\n      } else if (isValueUndefined) {\n        field._f.value = getFieldValue(field);\n      }\n    }\n\n    isMountedRef.current && readFormStateRef.current.isValid && updateIsValid();\n  };\n\n  const updateIsValid = React.useCallback(\n    async (values = {}) => {\n      const isValid = resolver\n        ? isEmptyObject(\n            (\n              await resolverRef.current!(\n                {\n                  ...getFieldsValues(fieldsRef),\n                  ...values,\n                },\n                contextRef.current,\n                getResolverOptions(\n                  namesRef.current.mount,\n                  fieldsRef.current,\n                  criteriaMode,\n                  shouldUseNativeValidation,\n                ),\n              )\n            ).errors,\n          )\n        : await validateForm(fieldsRef.current, true);\n\n      isValid !== formStateRef.current.isValid &&\n        subjectsRef.current.state.next({\n          isValid,\n        });\n    },\n    [criteriaMode, shouldUseNativeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: FieldPath<TFieldValues>,\n      value: UnpackNestedValue<\n        PathValue<TFieldValues, FieldPath<TFieldValues>>\n      >,\n      options: SetValueConfig,\n    ) =>\n      Object.entries(value).forEach(([fieldKey, fieldValue]) => {\n        const fieldName = `${name}.${fieldKey}` as Path<TFieldValues>;\n        const field = get(fieldsRef.current, fieldName);\n        const isFieldArray = namesRef.current.array.has(name);\n\n        (isFieldArray || !isPrimitive(fieldValue) || (field && !field._f)) &&\n        !isDateObject(fieldValue)\n          ? setInternalValues(\n              fieldName,\n              fieldValue as SetFieldValue<TFieldValues>,\n              options,\n            )\n          : setFieldValue(\n              fieldName,\n              fieldValue as SetFieldValue<TFieldValues>,\n              options,\n              true,\n              !field,\n            );\n      }),\n    [trigger],\n  );\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(fieldsRef.current, name);\n    const isFieldArray = namesRef.current.array.has(name);\n\n    if (isFieldArray) {\n      subjectsRef.current.array.next({\n        values: value,\n        name,\n        isReset: true,\n      });\n\n      if (\n        (readFormStateRef.current.isDirty ||\n          readFormStateRef.current.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        set(\n          formStateRef.current.dirtyFields,\n          name,\n          setFieldArrayDirtyFields(\n            value,\n            get(defaultValuesRef.current, name, []),\n            get(formStateRef.current.dirtyFields, name, []),\n          ),\n        );\n\n        subjectsRef.current.state.next({\n          name,\n          dirtyFields: formStateRef.current.dirtyFields,\n          isDirty: getIsDirty(name, value),\n        });\n      }\n\n      !(value as []).length &&\n        set(fieldsRef.current, name, []) &&\n        set(fieldArrayDefaultValuesRef.current, name, []);\n    }\n\n    ((field && !field._f) || isFieldArray) && !isNullOrUndefined(value)\n      ? setInternalValues(name, value, isFieldArray ? {} : options)\n      : setFieldValue(name, value, options, true, !field);\n\n    isFieldWatched(name) && subjectsRef.current.state.next({});\n    subjectsRef.current.watch.next({ name, values: getValues() });\n  };\n\n  const handleChange: ChangeHandler = React.useCallback(\n    async ({ type, target, target: { value, type: inputType } }) => {\n      let name = (target as Ref)!.name;\n      let error;\n      let isValid;\n      const field = get(fieldsRef.current, name) as Field;\n\n      if (field) {\n        let inputValue = inputType ? getFieldValue(field) : undefined;\n        inputValue = isUndefined(inputValue) ? value : inputValue;\n\n        const isBlurEvent = type === EVENTS.BLUR;\n        const {\n          isOnBlur: isReValidateOnBlur,\n          isOnChange: isReValidateOnChange,\n        } = getValidationModes(reValidateMode);\n\n        const shouldSkipValidation =\n          (!hasValidation(field._f, field._f.mount) &&\n            !resolver &&\n            !get(formStateRef.current.errors, name)) ||\n          skipValidation({\n            isBlurEvent,\n            isTouched: !!get(formStateRef.current.touchedFields, name),\n            isSubmitted: formStateRef.current.isSubmitted,\n            isReValidateOnBlur,\n            isReValidateOnChange,\n            ...validationMode,\n          });\n        const isWatched =\n          !isBlurEvent && isFieldWatched(name as FieldPath<TFieldValues>);\n\n        if (!isUndefined(inputValue)) {\n          field._f.value = inputValue;\n        }\n\n        const inputState = updateTouchAndDirtyState(\n          name,\n          field._f.value,\n          isBlurEvent,\n          false,\n        );\n\n        const shouldRender = !isEmptyObject(inputState) || isWatched;\n\n        if (shouldSkipValidation) {\n          !isBlurEvent &&\n            subjectsRef.current.watch.next({\n              name,\n              type,\n              values: getValues(),\n            });\n          return (\n            shouldRender &&\n            subjectsRef.current.state.next(\n              isWatched ? { name } : { ...inputState, name },\n            )\n          );\n        }\n\n        subjectsRef.current.state.next({\n          isValidating: true,\n        });\n\n        if (resolver) {\n          const { errors } = await resolverRef.current!(\n            getFieldsValues(fieldsRef),\n            contextRef.current,\n            getResolverOptions(\n              [name],\n              fieldsRef.current,\n              criteriaMode,\n              shouldUseNativeValidation,\n            ),\n          );\n          error = get(errors, name);\n\n          if (isCheckBoxInput(target as Ref) && !error) {\n            const parentNodeName = getNodeParentName(name);\n            const currentError = get(errors, parentNodeName, {});\n            currentError.type && currentError.message && (error = currentError);\n\n            if (\n              currentError ||\n              get(formStateRef.current.errors, parentNodeName)\n            ) {\n              name = parentNodeName;\n            }\n          }\n\n          isValid = isEmptyObject(errors);\n        } else {\n          error = (\n            await validateField(\n              field,\n              isValidateAllFieldCriteria,\n              shouldUseNativeValidation,\n            )\n          )[name];\n        }\n\n        !isBlurEvent &&\n          subjectsRef.current.watch.next({\n            name,\n            type,\n            values: getValues(),\n          });\n        shouldRenderBaseOnError(\n          false,\n          name,\n          error,\n          inputState,\n          isValid,\n          isWatched,\n        );\n      }\n    },\n    [],\n  );\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ...defaultValuesRef.current,\n      ...getFieldsValues(fieldsRef),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames as InternalFieldName)\n      : fieldNames.map((name) => get(values, name as InternalFieldName));\n  };\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name\n      ? convertToArrayPayload(name).forEach((inputName) =>\n          unset(formStateRef.current.errors, inputName),\n        )\n      : (formStateRef.current.errors = {});\n\n    subjectsRef.current.state.next({\n      errors: formStateRef.current.errors,\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = (\n      ((get(fieldsRef.current, name) as Field) || { _f: {} })._f || {}\n    ).ref;\n\n    set(formStateRef.current.errors, name, {\n      ...error,\n      ref,\n    });\n\n    subjectsRef.current.state.next({\n      name,\n      errors: formStateRef.current.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watchInternal: WatchInternal<TFieldValues> = React.useCallback(\n    (fieldNames, defaultValue, isGlobal, formValues) => {\n      const isArrayNames = Array.isArray(fieldNames);\n      const fieldValues =\n        formValues || isMountedRef.current\n          ? {\n              ...defaultValuesRef.current,\n              ...(formValues || getFieldsValues(fieldsRef)),\n            }\n          : isUndefined(defaultValue)\n          ? defaultValuesRef.current\n          : isArrayNames\n          ? defaultValue\n          : { [fieldNames as InternalFieldName]: defaultValue };\n\n      if (isUndefined(fieldNames)) {\n        isGlobal && (namesRef.current.watchAll = true);\n        return fieldValues;\n      }\n\n      const result = [];\n\n      for (const fieldName of convertToArrayPayload(fieldNames)) {\n        isGlobal && namesRef.current.watch.add(fieldName as InternalFieldName);\n        result.push(get(fieldValues, fieldName as InternalFieldName));\n      }\n\n      return isArrayNames ? result : result[0];\n    },\n    [],\n  );\n\n  const watch: UseFormWatch<TFieldValues> = (\n    fieldName?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: unknown,\n  ) =>\n    isFunction(fieldName)\n      ? subjectsRef.current.watch.subscribe({\n          next: (info) =>\n            fieldName(\n              watchInternal(\n                undefined,\n                defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>,\n              ) as UnpackNestedValue<TFieldValues>,\n              info,\n            ),\n        })\n      : watchInternal(\n          fieldName as InternalFieldName | InternalFieldName[],\n          defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const inputName of name\n      ? convertToArrayPayload(name)\n      : namesRef.current.mount) {\n      namesRef.current.mount.delete(inputName);\n      namesRef.current.array.delete(inputName);\n\n      if (get(fieldsRef.current, inputName) as Field) {\n        !options.keepError && unset(formStateRef.current.errors, inputName);\n        !options.keepValue && unset(fieldsRef.current, inputName);\n        !options.keepDirty &&\n          unset(formStateRef.current.dirtyFields, inputName);\n        !options.keepTouched &&\n          unset(formStateRef.current.touchedFields, inputName);\n        !shouldUnregister &&\n          !options.keepDefaultValue &&\n          unset(defaultValuesRef.current, inputName);\n      }\n    }\n\n    subjectsRef.current.watch.next({\n      values: getValues(),\n    });\n\n    subjectsRef.current.state.next({\n      ...formStateRef.current,\n      ...(!options.keepDirty ? {} : { isDirty: getIsDirty() }),\n    });\n    !options.keepIsValid && updateIsValid();\n  };\n\n  const registerFieldRef = (\n    name: InternalFieldName,\n    ref: HTMLInputElement,\n    options?: RegisterOptions,\n  ): ((name: InternalFieldName) => void) | void => {\n    register(name as FieldPath<TFieldValues>, options);\n    let field = get(fieldsRef.current, name) as Field;\n\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n\n    if (\n      ref === field._f.ref ||\n      (isRadioOrCheckbox &&\n        compact(field._f.refs || []).find((option) => option === ref))\n    ) {\n      return;\n    }\n\n    field = {\n      _f: isRadioOrCheckbox\n        ? {\n            ...field._f,\n            refs: [\n              ...compact(field._f.refs || []).filter(\n                (ref) => isHTMLElement(ref) && document.contains(ref),\n              ),\n              ref,\n            ],\n            ref: { type: ref.type, name },\n          }\n        : {\n            ...field._f,\n            ref,\n          },\n    };\n\n    set(fieldsRef.current, name, field);\n\n    updateIsValidAndInputValue(name, ref);\n  };\n\n  const register: UseFormRegister<TFieldValues> = React.useCallback(\n    (name, options = {}) => {\n      const field = get(fieldsRef.current, name);\n\n      set(fieldsRef.current, name, {\n        _f: {\n          ...(field && field._f ? field._f : { ref: { name } }),\n          name,\n          mount: true,\n          ...options,\n        },\n      });\n      namesRef.current.mount.add(name);\n      !field && updateIsValidAndInputValue(name);\n\n      return isWindowUndefined\n        ? ({ name: name as InternalFieldName } as UseFormRegisterReturn)\n        : {\n            name,\n            onChange: handleChange,\n            onBlur: handleChange,\n            ref: (ref: HTMLInputElement | null): void => {\n              if (ref) {\n                registerFieldRef(name, ref, options);\n              } else {\n                const field = get(fieldsRef.current, name, {}) as Field;\n                const shouldUnmount =\n                  shouldUnregister || options.shouldUnregister;\n\n                if (field._f) {\n                  field._f.mount = false;\n                  // If initial state of field element is disabled,\n                  // value is not set on first \"register\"\n                  // re-sync the value in when it switched to enabled\n                  if (isUndefined(field._f.value)) {\n                    field._f.value = field._f.ref.value;\n                  }\n                }\n\n                shouldUnmount &&\n                  !(\n                    isNameInFieldArray(namesRef.current.array, name) &&\n                    inFieldArrayActionRef.current\n                  ) &&\n                  namesRef.current.unMount.add(name);\n              }\n            },\n          };\n    },\n    [],\n  );\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> = React.useCallback(\n    (onValid, onInvalid) => async (e) => {\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let hasNoPromiseError = true;\n      let fieldValues = getFieldsValues(fieldsRef);\n\n      subjectsRef.current.state.next({\n        isSubmitting: true,\n      });\n\n      try {\n        if (resolver) {\n          const { errors, values } = await resolverRef.current!(\n            fieldValues,\n            contextRef.current,\n            getResolverOptions(\n              namesRef.current.mount,\n              fieldsRef.current,\n              criteriaMode,\n              shouldUseNativeValidation,\n            ),\n          );\n          formStateRef.current.errors = errors;\n          fieldValues = values;\n        } else {\n          await validateForm(fieldsRef.current);\n        }\n\n        if (\n          isEmptyObject(formStateRef.current.errors) &&\n          Object.keys(formStateRef.current.errors).every((name) =>\n            get(fieldValues, name),\n          )\n        ) {\n          subjectsRef.current.state.next({\n            errors: {},\n            isSubmitting: true,\n          });\n          await onValid(fieldValues, e);\n        } else {\n          onInvalid && (await onInvalid(formStateRef.current.errors, e));\n          shouldFocusError &&\n            focusFieldBy(\n              fieldsRef.current,\n              (key) => get(formStateRef.current.errors, key),\n              namesRef.current.mount,\n            );\n        }\n      } catch (err) {\n        hasNoPromiseError = false;\n        throw err;\n      } finally {\n        formStateRef.current.isSubmitted = true;\n        subjectsRef.current.state.next({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful:\n            isEmptyObject(formStateRef.current.errors) && hasNoPromiseError,\n          submitCount: formStateRef.current.submitCount + 1,\n          errors: formStateRef.current.errors,\n        });\n      }\n    },\n    [\n      shouldFocusError,\n      isValidateAllFieldCriteria,\n      criteriaMode,\n      shouldUseNativeValidation,\n    ],\n  );\n\n  const registerAbsentFields = <T extends DefaultValues<TFieldValues>>(\n    defaultValues: T,\n    name = '',\n  ): void => {\n    for (const key in defaultValues) {\n      const value = defaultValues[key];\n      const fieldName = name + (name ? '.' : '') + key;\n      const field = get(fieldsRef.current, fieldName);\n\n      if (!field || !field._f) {\n        if (isObject(value) || Array.isArray(value)) {\n          registerAbsentFields(value, fieldName);\n        } else if (!field) {\n          register(fieldName as Path<TFieldValues>, { value });\n        }\n      }\n    }\n  };\n\n  const reset: UseFormReset<TFieldValues> = (values, keepStateOptions = {}) => {\n    const updatedValues = values || defaultValuesRef.current;\n\n    if (isWeb && !keepStateOptions.keepValues) {\n      for (const name of namesRef.current.mount) {\n        const field = get(fieldsRef.current, name);\n        if (field && field._f) {\n          const inputRef = Array.isArray(field._f.refs)\n            ? field._f.refs[0]\n            : field._f.ref;\n\n          try {\n            isHTMLElement(inputRef) && inputRef.closest('form')!.reset();\n            break;\n          } catch {}\n        }\n      }\n    }\n\n    !keepStateOptions.keepDefaultValues &&\n      (defaultValuesRef.current = { ...updatedValues });\n\n    if (!keepStateOptions.keepValues) {\n      fieldsRef.current = {};\n\n      subjectsRef.current.control.next({\n        values: keepStateOptions.keepDefaultValues\n          ? defaultValuesRef.current\n          : { ...updatedValues },\n      });\n\n      subjectsRef.current.watch.next({\n        values: { ...updatedValues },\n      });\n\n      subjectsRef.current.array.next({\n        values: { ...updatedValues },\n        isReset: true,\n      });\n    }\n\n    namesRef.current = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n    };\n\n    subjectsRef.current.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? formStateRef.current.submitCount\n        : 0,\n      isDirty: keepStateOptions.keepDirty\n        ? formStateRef.current.isDirty\n        : keepStateOptions.keepDefaultValues\n        ? deepEqual(values, defaultValuesRef.current)\n        : false,\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? formStateRef.current.isSubmitted\n        : false,\n      dirtyFields: keepStateOptions.keepDirty\n        ? formStateRef.current.dirtyFields\n        : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? formStateRef.current.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? formStateRef.current.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n\n    isMountedRef.current = !!keepStateOptions.keepIsValid;\n  };\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name) =>\n    get(fieldsRef.current, name)._f.ref.focus();\n\n  React.useEffect(() => {\n    const formStateSubscription = subjectsRef.current.state.subscribe({\n      next(formState) {\n        if (shouldRenderFormState(formState, readFormStateRef.current, true)) {\n          formStateRef.current = {\n            ...formStateRef.current,\n            ...formState,\n          };\n          updateFormState(formStateRef.current);\n        }\n      },\n    });\n\n    const useFieldArraySubscription = subjectsRef.current.array.subscribe({\n      next(state) {\n        if (state.values && state.name && readFormStateRef.current.isValid) {\n          const values = getFieldsValues(fieldsRef);\n          set(values, state.name, state.values);\n          updateIsValid(values);\n        }\n      },\n    });\n\n    return () => {\n      formStateSubscription.unsubscribe();\n      useFieldArraySubscription.unsubscribe();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const unregisterFieldNames = [];\n    const isLiveInDom = (ref: Ref) =>\n      !isHTMLElement(ref) || !document.contains(ref);\n\n    if (!isMountedRef.current) {\n      isMountedRef.current = true;\n      readFormStateRef.current.isValid && updateIsValid();\n      !shouldUnregister && registerAbsentFields(defaultValuesRef.current);\n    }\n\n    for (const name of namesRef.current.unMount) {\n      const field = get(fieldsRef.current, name) as Field;\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every(isLiveInDom)\n          : isLiveInDom(field._f.ref)) &&\n        unregisterFieldNames.push(name);\n    }\n\n    unregisterFieldNames.length &&\n      unregister(unregisterFieldNames as FieldPath<TFieldValues>[]);\n\n    namesRef.current.unMount = new Set();\n  });\n\n  return {\n    control: React.useMemo(\n      () => ({\n        register,\n        inFieldArrayActionRef,\n        getIsDirty,\n        subjectsRef,\n        watchInternal,\n        fieldsRef,\n        updateIsValid,\n        namesRef,\n        readFormStateRef,\n        formStateRef,\n        defaultValuesRef,\n        fieldArrayDefaultValuesRef,\n        unregister,\n        shouldUnmount: shouldUnregister,\n      }),\n      [],\n    ),\n    formState: getProxyFormState<TFieldValues>(\n      isProxyEnabled,\n      formState,\n      readFormStateRef,\n    ),\n    trigger,\n    register,\n    handleSubmit,\n    watch: React.useCallback(watch, []),\n    setValue: React.useCallback(setValue, [setInternalValues]),\n    getValues: React.useCallback(getValues, []),\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    unregister: React.useCallback(unregister, []),\n    setError: React.useCallback(setError, []),\n    setFocus: React.useCallback(setFocus, []),\n  };\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n"],"sourceRoot":""}